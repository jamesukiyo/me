name: "Release"

on:
    push:
        tags:
            - "v*"

jobs:
    checks:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2
            - run: |
                  bun install tailwindcss @tailwindcss/cli
                  bunx @tailwindcss/cli -i='./input.css' -o='./assets/gen-tailwind.css'
            - uses: moonrepo/setup-rust@v1
              with:
                  inherit-toolchain: true
                  bins: dioxus-cli
                  components: clippy
                  cache-base: master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - run: cargo clippy
            - run: dx check

    build:
        needs: checks
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2
            - run: |
                  bun install tailwindcss @tailwindcss/cli
                  bunx @tailwindcss/cli -i='./input.css' -o='./assets/gen-tailwind.css'
            - uses: moonrepo/setup-rust@v1
              with:
                  inherit-toolchain: true
                  bins: dioxus-cli
                  cache-base: master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - run: dx build

    deploy:
        needs: build
        permissions:
            pages: write
            id-token: write
            contents: read
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2
            - run: |
                  bun install tailwindcss @tailwindcss/cli
                  bunx @tailwindcss/cli -i='./input.css' -o='./assets/gen-tailwind.css'
            - uses: moonrepo/setup-rust@v1
              with:
                  inherit-toolchain: true
                  bins: dioxus-cli
                  cache-base: master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - run: |
                  dx bundle --out-dir docs
                  mv docs/public/* docs/
                  cp docs/index.html docs/404.html
            - uses: actions/configure-pages@v5
            - uses: actions/upload-pages-artifact@v3
              with:
                  path: docs/
            - id: deployment
              uses: actions/deploy-pages@v4

    tagged-release:
        needs: build
        permissions:
            id-token: write
            contents: write
            packages: write
        runs-on: ubuntu-latest
        steps:
            - uses: marvinpinto/action-automatic-releases@latest
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  prerelease: false
